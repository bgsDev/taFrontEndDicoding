{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";0YACA,ovNAIA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAyBF,QAtByB,CACjBC,IAAG,SAACC,GAAI,oGACPA,EAAI,CAAF,gEAIOP,EAAS,uCAAEM,IAAIP,EAAmBQ,IAAE,0CALtC,EAMd,EACMC,OAAM,WAAG,iHACCR,EAAS,uCAAEQ,OAAOT,IAAiB,0CADpC,EAEf,EACMU,IAAG,SAACC,GAAO,oGACVA,EAAMC,eAAe,MAAO,CAAF,gEAGjBX,EAAS,uCAAES,IAAIV,EAAmBW,IAAK,0CAJtC,EAKjB,EAAC,gBACYH,GAAI,iHACDP,EAAS,8CAASD,EAAmBQ,IAAE,0CADtC,EAEjB,gDCxBF,QANqB,CACnBK,KAAM,GAAF,OAAKf,EAAAA,EAAAA,SAAe,QACxBgB,OAAQ,SAACN,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,EAC9CO,OAAQ,GAAF,OAAKjB,EAAAA,EAAAA,SAAe,8PCJ5B,irOA+BA,QA9BiB,yBADjB,4FACiB,SADjB,QAUG,EALA,EAJc,EA2Bd,OA5BH,EACiB,OADjB,EACiB,0CACf,oGACyBkB,MAAMC,EAAAA,MAAmBC,MAAM,SAACC,GAAI,OAAKA,EAAKC,MAAM,IAAE,OAA/D,OAARC,EAAW,EAAH,uBACPA,GAAQ,2CAChB,wFAED,WAA4Bb,GAAE,uFACLQ,MAAMC,EAAAA,OAAoBT,IAAKU,MAAM,SAACC,GAAI,OAAKA,EAAKC,MAAM,IAAE,OAArE,OAARC,EAAW,EAAH,uBACPA,GAAQ,2CAChB,oFAED,WAAuBC,GAAI,yEAaxB,OAZKC,EAAS,CACbC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUX,IACtB,SACsBN,MAAMC,EAAAA,OAAqBM,GAAQL,MAAM,SAACC,GAAI,OAAKA,EAAKC,MAAM,IAAE,OAAzE,OAARC,EAAW,EAAH,uBACPA,GAAQ,2CAChB,+CA5BH,6DA4BG,EA3Bc,mCCcjB,QAhBe,CACba,SAAU,uCAEVC,gBAAiB,oDACjBC,gBAAiB,qDAEjBC,WAAY,WACZxC,cAAe,eACfE,iBAAkB,EAClBC,kBAAmB,QAEnBsC,kBAAmB,iCAEnBC,MAAO,qHCYMC,SAASC,cAAc,aAC/BC,MAAQ,CACbC,IAAK,aACLC,MAAO,sBAEKJ,SAASC,cAAc,UAC/BI,KAAO,CACXrC,GAAI,OACJK,KAAM,CACJ,CAAEiC,MAAO,OAAQC,IAAK,UACtB,CAAED,MAAO,WAAYC,IAAK,cAC1B,CAAED,MAAO,WAAYC,IAAK,YAIhBP,SAASC,cAAc,YAC/BO,OAAS,CACbC,IAAKnD,EAAAA,EAAAA,OAEPoD,EAAAA,EAAAA,KAAa,CAAC,GAGd,IAAMC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQb,SAASC,cAAc,SAC/Ba,OAAQd,SAASC,cAAc,SAC/Bc,QAASf,SAASC,cAAc,kBAGlCe,OAAOC,iBAAiB,QAAQ,WAC9BP,EAAAA,EAAAA,UACAC,EAAIO,cACJC,EAAAA,EAAAA,KAEAT,EAAAA,EAAAA,OACF,IAEAM,OAAOC,iBAAiB,cAAc,WACpCN,EAAIO,YACN","sources":["webpack://restaurant-apps/./src/scripts/data/idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/wscomponent.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable no-prototype-builtins */\r\n/* eslint-disable consistent-return */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestoIdb = {\r\n  async get(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAll() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async put(resto) {\r\n    if (!resto.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto);\r\n  },\r\n  async delete(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestoIdb;\r\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  list: `${CONFIG.BASE_URL}list`,\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n  review: `${CONFIG.BASE_URL}review`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass wscomponent {\r\n  static async listRestoran() {\r\n    const response = await fetch(API_ENDPOINT.list).then(((resp) => resp.json()));\r\n    return response;\r\n  }\r\n\r\n  static async detailRestoran(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id)).then(((resp) => resp.json()));\r\n    return response;\r\n  }\r\n\r\n  static async setReview(data) {\r\n    const option = {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n    };\r\n    const response = await fetch(API_ENDPOINT.review, option).then(((resp) => resp.json()));\r\n    return response;\r\n  }\r\n}\r\n\r\nexport default wscomponent;\r\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n\n  BASE_IMAGE_URLS: 'https://restaurant-api.dicoding.dev/images/small/',\n  BASE_IMAGE_URLM: 'https://restaurant-api.dicoding.dev/images/medium/',\n\n  CACHE_NAME: 'resto-v1',\n  DATABASE_NAME: 'restoran-idb',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'resto',\n\n  WEB_SOCKET_SERVER: 'wss://movies-feed.dicoding.dev',\n\n  MODAL: 'modalLoad',\n};\n\nexport default CONFIG;\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/style.css';\nimport '../styles/responsive.css';\n\n// customElements\nimport '../templates/customElement/skip-link';\nimport '../templates/customElement/header/header-ce1';\nimport '../templates/customElement/navbar/nav-ce1';\nimport '../templates/customElement/modal/modal-ce';\n\n// service worker\nimport swRegister from './utils/sw-register';\n\n// web socket\n// import WebSocketInitiator from './utils/websocket-initiator';\n\n// modal suffort\nimport sfmodal from './utils/sfLib/modal';\n\nimport CONFIG from './globals/config';\n\n// pages\nimport App from './views/app';\n\n// create html\nconst headce = document.querySelector('header-ce');\nheadce.head1 = {\n  img: 'dev-blankx',\n  nmApp: 'Restaurant Zam-Zam',\n};\nconst navce = document.querySelector('nav-ce');\nnavce.nav1 = {\n  id: 'nav1',\n  list: [\n    { value: 'Home', url: '#/home' },\n    { value: 'Favorite', url: '#/favorite' },\n    { value: 'About Us', url: '#/home' },\n  ],\n};\n\nconst modal = document.querySelector('modal-ce');\nmodal.modal1 = {\n  idx: CONFIG.MODAL,\n};\nsfmodal.init({});\n\n// _initialAppShell\nconst app = new App({\n  button: document.querySelector('#menu'),\n  drawer: document.querySelector('#nav1'),\n  content: document.querySelector('#maincontent'),\n});\n\nwindow.addEventListener('load', () => {\n  sfmodal.loading();\n  app.renderPage();\n  swRegister();\n  // WebSocketInitiator.init(CONFIG.WEB_SOCKET_SERVER);\n  sfmodal.close();\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","get","id","getAll","put","resto","hasOwnProperty","list","DETAIL","review","fetch","API_ENDPOINT","then","resp","json","response","data","option","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","BASE_URL","BASE_IMAGE_URLS","BASE_IMAGE_URLM","CACHE_NAME","WEB_SOCKET_SERVER","MODAL","document","querySelector","head1","img","nmApp","nav1","value","url","modal1","idx","sfmodal","app","App","button","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}